name: Deploy AWS Production - FastFoodApp

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: EKS-FIAP
  ECR_REPO_NAME: fastfood-app
  REPO_URL: 759212231558.dkr.ecr.us-east-1.amazonaws.com/fastfood-app

jobs:
  deploy:
    name: Build, Push & Deploy App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Inicializar Terraform
        run: |
          cd infra
          terraform init

      - name: Aplicar Terraform
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Login no ECR
        run: |
          aws ecr get-login-password \
            --region ${{ env.AWS_REGION }} | \
            docker login \
              --username AWS \
              --password-stdin \
              ${{ env.REPO_URL }}

      - name: Build e Push da Imagem
        run: |
          docker build -t ${{ env.ECR_REPO_NAME }} .
          docker tag ${{ env.ECR_REPO_NAME }}:latest ${{ env.REPO_URL }}:latest
          docker push ${{ env.REPO_URL }}:latest

      - name: Atualizar kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ env.CLUSTER_NAME }} \
            --region ${{ env.AWS_REGION }}

      - name: Aplicar Manifestos K8s
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secrets.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/hpa.yaml
